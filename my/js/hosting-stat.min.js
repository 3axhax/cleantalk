!function () {
    function t(t) {
        this.filters = {
            date_start: moment().subtract(7, "days").format("YYYY-MM-DD"),
            date_end: moment().format("YYYY-MM-DD"),
            ip: ""
        }, this.lang = t.lang, this.prepareURL(location.href), this.query = this.url, $("#datepicker").daterangepicker({
            locale: {format: "MMM DD, YYYY"},
            startDate: moment(this.filters.date_start, "YYYY-MM-DD"),
            endDate: moment(this.filters.date_end, "YYYY-MM-DD")
        }, function (t, e) {
            this.filters.date_start = t.format("YYYY-MM-DD"), this.filters.date_end = e.format("YYYY-MM-DD"), this.applyFilters()
        }.bind(this)), $("#ip").selectpicker("val"), $("#ip").selectpicker("val", this.filters.ip), $("#ip").change(function () {
            this.filters.ip = $("#ip").selectpicker("val"), this.applyFilters()
        }.bind(this)), $("#btn_search").click(function () {
            var t = $("#btn_search");
            t.hasClass("disabled") || (t.addClass("disabled"), location.href = this.query, this.load(function () {
                t.removeClass("disabled")
            }))
        }.bind(this)), $("#btn_reset").click(function () {
            this.filters = {
                date_start: moment().subtract(7, "days").format("YYYY-MM-DD"),
                date_end: moment().format("YYYY-MM-DD"),
                ip: ""
            }, this.applyFilters(), location.href = this.query, $("#ip").selectpicker("val", ""), $("#datepicker").data("daterangepicker").setStartDate(moment(this.filters.date_start, "YYYY-MM-DD")), $("#datepicker").data("daterangepicker").setEndDate(moment(this.filters.date_end, "YYYY-MM-DD")), this.load()
        }.bind(this)), this.load(function () {
            new Tablesort(document.getElementById("log-table"), {descending: !0})
        })
    }

    t.prototype.load = function (t) {
        function e() {
            $("#log-table tbody tr").remove()
        }

        function i(t) {
            n.append(t)
        }

        function s(t) {
            t = t || "Internal Server Error", e(), i('<tr><td colspan="5" class="text-center bg-danger text-danger">' + t + "</td></tr>")
        }

        var a = {is_ajax: 1};
        for (var r in this.filters) this.filters.hasOwnProperty(r) && this.filters[r] && (a[r] = this.filters[r]);
        var n = $("#log-table tbody");
        !function () {
            e(), i('<tr><td colspan="5" class="text-center"><img src="/images/loading.gif"></td></tr>')
        }(), AJAX.get(this.url, a, function (a) {
            try {
                if (a = JSON.parse(a), e(), a.length) for (var r in a) /*console.log(a[r]),*/
                    i('<tr><td>:IP:</td><td>:NAME:</td><td>:SITE:</td><td class="text-danger">:DENY:</td><td class="text-success">:ALLOW:</td></tr>'
                        .replace(":IP:", a[r].ip)
                        .replace(":NAME:", a[r].name)
                        .replace(":SITE:", a[r].site)
                        .replace(":DENY:", a[r].deny)
                        .replace(":ALLOW:", a[r].allow));
                else i('<tr><td colspan="5" class="text-center">nothing...</td></tr>')
            } catch (t) {
                s(t.message)
            }
            t && t()
        }, function () {
            s(), t && t()
        })
    }, t.prototype.prepareURL = function (t) {
        if (-1 !== t.indexOf("#")) {
            var e = t.split("#");
            this.url = e[0], e[1] = e[1].split("&");
            for (var i = 0; i < e[1].length; i++) {
                var s = e[1][i].split("=");
                if (s[1] && void 0 !== this.filters[s[0]]) switch (s[0]) {
                    case"date_start":
                    case"date_end":
                        s[1] = moment(s[1], "YYYY-MM-DD"), s[1].isValid() && (this.filters[s[0]] = s[1].format("YYYY-MM-DD"));
                        break;
                    default:
                        this.filters[s[0]] = s[1]
                }
            }
        } else this.url = t
    }, t.prototype.applyFilters = function () {
        var t = [];
        for (var e in this.filters) this.filters.hasOwnProperty(e) && this.filters[e] && t.push(encodeURIComponent(e) + "=" + encodeURIComponent(this.filters[e]));
        t.length && (this.query = this.url + "#" + t.join("&"))
    }, window.hostingStat = function (e) {
        new t(e)
    }
}();
//# sourceMappingURL=hosting-stat.min.js.map
